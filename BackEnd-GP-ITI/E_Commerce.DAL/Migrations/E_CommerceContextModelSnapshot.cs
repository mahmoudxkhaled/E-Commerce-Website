// <auto-generated />
using System;
using E_Commerce.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.DAL.Migrations
{
    [DbContext(typeof(E_CommerceContext))]
    partial class E_CommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("E_Commerce.DAL.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartId = new Guid("84cde440-927d-43a8-b81d-27379494fe87"),
                            CustomerId = new Guid("c7d3e80a-7a4a-4c54-91a6-89c0df051c94")
                        },
                        new
                        {
                            CartId = new Guid("524e6f17-f3bf-4169-b1f9-fa3c07628dfc"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7")
                        },
                        new
                        {
                            CartId = new Guid("8ffdbf08-8dc6-41d4-bc0e-065aa46503c9"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8")
                        },
                        new
                        {
                            CartId = new Guid("024f7468-865e-41b4-8272-cec2dca9f028"),
                            CustomerId = new Guid("e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc")
                        },
                        new
                        {
                            CartId = new Guid("2072f256-297c-41f3-b651-fdc51f1e7884"),
                            CustomerId = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f")
                        },
                        new
                        {
                            CartId = new Guid("0451da77-cbd3-4ba8-9f76-ba4e1190581e"),
                            CustomerId = new Guid("22ac8dc9-4385-48ae-90a3-7d8c898c6d5d")
                        },
                        new
                        {
                            CartId = new Guid("dc69c759-d267-4db3-ad38-8ec09b331ead"),
                            CustomerId = new Guid("b6a76b15-33e5-4d26-98b9-c948c7823b84")
                        },
                        new
                        {
                            CartId = new Guid("e711d6cb-c5ea-415f-b3c4-719a1b0c3f8e"),
                            CustomerId = new Guid("0e67a2e5-df53-4a92-9854-8e1ad46a4e61")
                        },
                        new
                        {
                            CartId = new Guid("a5770c22-ae28-496f-b922-7edc22c56a78"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992b58")
                        },
                        new
                        {
                            CartId = new Guid("61af21fe-1869-4b42-952c-da1332463fa4"),
                            CustomerId = new Guid("724587e6-9314-4fe6-9c3e-6fd612f50234")
                        },
                        new
                        {
                            CartId = new Guid("73551b44-c8fd-4cc4-93b5-2df3b4311cff"),
                            CustomerId = new Guid("234cdf89-12a3-45b6-789c-0123456789de")
                        },
                        new
                        {
                            CartId = new Guid("0361a07f-2e2e-4bc9-a859-81877b79ec73"),
                            CustomerId = new Guid("6789abcd-ef01-2345-6789-abcd01234567")
                        },
                        new
                        {
                            CartId = new Guid("b31b2df4-3468-4ba2-9ff7-c54788e209cb"),
                            CustomerId = new Guid("bcdef012-3456-789a-bcde-f01234567890")
                        },
                        new
                        {
                            CartId = new Guid("513cad0d-5dbf-4b8a-ae06-d1e14cfcb7e8"),
                            CustomerId = new Guid("2345cdef-0123-4567-89ab-cdef01234567")
                        },
                        new
                        {
                            CartId = new Guid("3e753bd6-8031-4ab6-88bf-86ef59a20ea0"),
                            CustomerId = new Guid("8901def0-1234-5678-9abc-def012345678")
                        },
                        new
                        {
                            CartId = new Guid("ab2b0ed2-41c4-42c1-818d-86d4fb2719e0"),
                            CustomerId = new Guid("23456789-01ab-cdef-0123-456789abcdef")
                        },
                        new
                        {
                            CartId = new Guid("472cede9-45ab-40c8-8249-7505b72317df"),
                            CustomerId = new Guid("def01234-5678-9abc-def0-123456789abc")
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.CartProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CartId", "Size", "Color");

                    b.HasIndex("CartId");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583"),
                            Description = "Men's Clothing",
                            Image = "men.jpg",
                            Name = "Men"
                        },
                        new
                        {
                            Id = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d"),
                            Description = "Women's Clothing",
                            Image = "Women.jpg",
                            Name = "Women"
                        },
                        new
                        {
                            Id = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f"),
                            Description = "Kids's Clothing",
                            Image = "Kids.jpg",
                            Name = "Kids"
                        },
                        new
                        {
                            Id = new Guid("f032f788-2340-431f-9f8f-eeb176a35177"),
                            Description = "Mens shirts's Clothing",
                            Image = "men shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("a6c4de53-33c5-48e1-9f21-5649726d3a3d"),
                            Description = "Women shirts's Clothing",
                            Image = "Women shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("8a6d4a19-47cc-4a4e-822b-cac1de2efc8d"),
                            Description = "Kids shirts's Clothing",
                            Image = "Kids shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("9a938bc1-0717-4b8d-8f8b-3a2f55de49db"),
                            Description = "Men Pants's Clothing",
                            Image = "men Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("d9f02e92-d14c-4b6d-86ad-6e4e6c48020a"),
                            Description = "Women Pants's Clothing",
                            Image = "Women Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("1d53debe-03e6-487f-9b34-6b26c68fc1e5"),
                            Description = "Kids Pants's Clothing",
                            Image = "Kids Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("6b3c4ef5-01ad-49c7-a8ff-36ae55d0ce8d"),
                            Description = "Men Shoes's Clothing",
                            Image = "men Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("35b303b9-25a0-4379-89b3-64e4ae51291f"),
                            Description = "Women Shoes's Clothing",
                            Image = "Women Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("ca09f6a1-5b87-4b56-9ee3-c6fb6ad070c2"),
                            Description = "Kids Shoes's Clothing",
                            Image = "Kids Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("6f6c6c4c-9e6e-4e0c-97cc-8b52c055918b"),
                            Description = "Men Jackets's Clothing",
                            Image = "men Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("47a38a48-8747-4461-ba32-7e573be663ee"),
                            Description = "Women Jackets's Clothing",
                            Image = "Women Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("b19a53a3-04e7-4804-84bc-84da64d738a6"),
                            Description = "Kids Jackets's Clothing",
                            Image = "Kids Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("a6d7e8b5-2f4d-4f51-b24b-4fcb52e36f5f"),
                            Description = "Men Hoodies's Clothing",
                            Image = "men Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("e18e42b7-799e-4b3b-a084-c55d4bb5da3f"),
                            Description = "Women Hoodies's Clothing",
                            Image = "Women Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("c2ae51c9-913a-4e7d-a7b5-ef1efc8f9d3e"),
                            Description = "Kids Hoodies's Clothing",
                            Image = "Kids Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.CustomerReview", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersReviews");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderData")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7d3e80a-7a4a-4c54-91a6-89c0df051c94"),
                            ArrivalDate = new DateTime(2029, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Iraq",
                            CustomerId = "07d96ed8-155d-49c7-a77a-615f109d77c3",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "567 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("6789abcd-ef01-2345-6789-abcd01234567"),
                            ArrivalDate = new DateTime(2029, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Libya",
                            CustomerId = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("8901def0-1234-5678-9abc-def012345678"),
                            ArrivalDate = new DateTime(2029, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Afghanistan",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7",
                            Discount = 0.0,
                            OrderData = new DateTime(2029, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Unpaid",
                            Street = "123 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("b6a76b15-33e5-4d26-98b9-c948c7823b84"),
                            ArrivalDate = new DateTime(2029, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Los Angeles",
                            Country = "Andorra",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "456 Maple Ave",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("07d96ed8-155d-49c7-a77a-615f109d77c3"),
                            ArrivalDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Zimbabwe",
                            CustomerId = "e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc",
                            Discount = 1.0,
                            OrderData = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("07d96ed8-155d-49c7-a77a-615f109d75c3"),
                            ArrivalDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Zimbabwe",
                            CustomerId = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            Discount = 1.0,
                            OrderData = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("0e67a2e5-df53-4a92-9854-8e1ad46a4e61"),
                            ArrivalDate = new DateTime(2027, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New York",
                            Country = "Belgium",
                            CustomerId = "0e67a2e5-df53-4a92-9854-8e1ad46a4e61",
                            Discount = 0.0,
                            OrderData = new DateTime(2027, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "123 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("22ac8dc9-4385-48ae-90a3-7d8c898c6d5d"),
                            ArrivalDate = new DateTime(2027, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Los Angeles",
                            Country = "Belize",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992b58",
                            Discount = 0.5,
                            OrderData = new DateTime(2027, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Shipped",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "456 Main St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f"),
                            ArrivalDate = new DateTime(2029, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Canada",
                            CustomerId = "724587e6-9314-4fe6-9c3e-6fd612f50234",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2028, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("23456789-01ab-cdef-0123-456789abcdef"),
                            ArrivalDate = new DateTime(2027, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Oman",
                            CustomerId = "234cdf89-12a3-45b6-789c-0123456789de",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2027, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "321 Maple Ave",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("2345cdef-0123-4567-89ab-cdef11234567"),
                            ArrivalDate = new DateTime(2027, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Taiwan",
                            CustomerId = "6789abcd-ef01-2345-6789-abcd01234567",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2027, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "567 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("def01234-5678-9abc-def0-113456789abc"),
                            ArrivalDate = new DateTime(2028, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Miami",
                            Country = "Fiji",
                            CustomerId = "bcdef012-3456-789a-bcde-f01234567890",
                            Discount = 0.29999999999999999,
                            OrderData = new DateTime(2028, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "901 Cherry Ln",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("e23edc32-bd6a-4b6b-a28e-ccf90b5c32dc"),
                            ArrivalDate = new DateTime(2028, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Boston",
                            Country = "Denmark",
                            CustomerId = "2345cdef-0123-4567-89ab-cdef01234567",
                            Discount = 0.14999999999999999,
                            OrderData = new DateTime(2028, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "246 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b5c7c49f"),
                            ArrivalDate = new DateTime(2029, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Canada",
                            CustomerId = "8901def0-1234-5678-9abc-def012345678",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50234"),
                            ArrivalDate = new DateTime(2029, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Dallas",
                            Country = "Samoa",
                            CustomerId = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "987 Cedar St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992b58"),
                            ArrivalDate = new DateTime(2029, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Diego",
                            Country = "Samoa",
                            CustomerId = "bcdef012-3456-789a-bcde-f01234567890",
                            Discount = 0.0,
                            OrderData = new DateTime(2029, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Unpaid",
                            Street = "456 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50233"),
                            ArrivalDate = new DateTime(2029, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Samoa",
                            CustomerId = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50232"),
                            ArrivalDate = new DateTime(2029, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Senegal",
                            CustomerId = "def01234-5678-9abc-def0-123456789abc",
                            Discount = 0.29999999999999999,
                            OrderData = new DateTime(2029, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "123 Maple Ave",
                            TotalPrice = 0m
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.OrderProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId", "Color", "Size");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("863328da-d98d-4857-87b0-0c74858eb86f"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c1272a2d-ac14-4b7c-8232-5238146449cd"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f7d7e52a-6f5f-460c-9024-791d46950ff9"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("93e71751-609c-4c7f-b639-3e2213df0354"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4816d57b-b78d-40e8-975a-a142720cb551"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c556b2be-a561-43d0-8e93-55e93c6774a7"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("8bb04481-ec1a-40b5-ab81-ac8d604be2b2"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("23adfe9e-1f5e-497d-b405-ec407c8f0804"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("406ab02a-29b0-426a-a8da-bc01765cd77f"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a84f7f68-020a-43ce-b2f7-24b6b6d99f01"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c30959e9-9e96-4939-9223-c12a99d08158"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("5af08fef-6384-4d45-ab76-04bfcd35d5b0"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6c1aa964-f434-48ce-abb6-08e22993d6d7"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3013bf18-5aa6-4401-a0b1-3bffd40f48e3"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e20ec8e0-4fdd-4832-ab96-f33de900f2cc"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c94714d0-fc91-459e-a084-46f31632851c"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9a10ad4e-3100-41c8-99bf-64ab57fbddf4"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("30f266f1-4015-49cf-b1c7-74fe5726ee48"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6f88a1e5-444f-4477-bbbc-c43d00d9ea89"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("20388e79-f68e-4eac-aa4f-0a84c35ad82b"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("5cb2df2c-7d98-487e-a7dc-82749e36f2ad"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("7727b2cb-6c7a-4290-9dfe-485ad2870dca"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("dca8e1f4-743d-42fd-9bfe-e1e8712a8f8d"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3ca93f21-6724-40da-b990-ba54ad11781c"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("aa47d169-fb96-4880-a667-4468220d8c9d"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ef9d26ae-2c16-4f56-a346-b57d55093eea"),
                            Description = "Classic denim jeans for men",
                            Discount = 0.05m,
                            Name = "Men's Jeans",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0643160c-0001-4fbe-9720-375e0ab58813"),
                            Description = "Stylish blouse for women",
                            Discount = 0m,
                            Name = "Women's Blouse",
                            Price = 24.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ef49c123-2377-433f-a5e0-e4a24d7ac7f8"),
                            Description = "Spacious backpack for kids",
                            Discount = 0m,
                            Name = "Kids' Backpack",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0367b0c5-9098-487a-a6c9-dd795c7cf78d"),
                            Description = "Spacious backpack for kids",
                            Discount = 0m,
                            Name = "Kids' Backpack",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("59e7090c-40be-4fb3-b264-0487bd260378"),
                            Description = "Casual shorts for men",
                            Discount = 0.1m,
                            Name = "Men's Shorts",
                            Price = 17.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2a4c10b6-8c63-4b39-98e6-684ad3962838"),
                            Description = "Comfortable sandals for women",
                            Discount = 0.2m,
                            Name = "Women's Sandals",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("06bed1f3-297f-4d79-a470-f2a5c31a70e1"),
                            Description = "Adorable t-shirt for kids",
                            Discount = 0m,
                            Name = "Kids' T-Shirt",
                            Price = 12.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e4cb01cc-a97d-4d05-b8a9-cab8379f7e2c"),
                            Description = "Stylish sneakers for men",
                            Discount = 0.15m,
                            Name = "Men's Sneakers",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("68a26131-3d78-4293-afb0-c0c6a015273c"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("8f8a8955-813b-421f-aee4-70fae73b96aa"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d6df4ef6-5aea-4faa-bb84-40562524bcea"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("435a74c2-d142-46cf-94ba-29a973b386db"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("964bcf56-51f3-472a-b1d3-cc76a904e1fb"),
                            Description = "Warm jacket for kids",
                            Discount = 0.1m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("330dfd30-f2c6-4935-8abb-e3659a514d26"),
                            Description = "Classic polo shirt for men",
                            Discount = 0m,
                            Name = "Men's Polo Shirt",
                            Price = 22.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e80967a9-f441-4789-baaf-db25ebe1c23e"),
                            Description = "Stylish denim jeans for women",
                            Discount = 0.05m,
                            Name = "Women's Jeans",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("508e933f-db53-491f-bc1e-9e37d4f9da5c"),
                            Description = "Cute dress for kids",
                            Discount = 0m,
                            Name = "Kids' Dress",
                            Price = 32.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6513d5c2-1aa1-4007-a323-d309f14200a4"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9507d9a9-ee3a-4570-ba1b-8cd79628a651"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("207d4d99-ee22-4a09-9cce-0ce368c50257"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0a987b7e-4c90-4e8d-b807-a358a5089b9a"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f8c2c7c3-19eb-4d77-aeb9-e9646fae4204"),
                            Description = "Sporty sneakers for women",
                            Discount = 0m,
                            Name = "Women's Sneakers",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("7f5b9f0c-f685-4392-b536-896ee7cdfd8e"),
                            Description = "Casual trousers for kids",
                            Discount = 0.1m,
                            Name = "Kids' Trousers",
                            Price = 21.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("66ef6779-3944-4851-befb-555143127550"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d6b1455b-9687-46d2-aade-096def97707e"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d16a4635-a74e-436a-93a4-29272ad514aa"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e932d1f2-60cf-4a8f-a265-832fe611e734"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("818312b7-9ec8-4332-adf6-c701d8049b65"),
                            Description = "Stylish jacket for women",
                            Discount = 0m,
                            Name = "Women's Jacket",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4f9bf3bd-c2ee-40ba-8532-449350c9d723"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d551b826-f5f1-470c-ae64-1799c46d55b4"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d0d71cfa-5864-4096-b21f-8735f77281a0"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("bf94c213-5090-4177-9e8f-dea17ae51b5e"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("1b388b37-76d8-41e9-875f-20e386f47a37"),
                            Description = "Warm sweater for men",
                            Discount = 0.1m,
                            Name = "Men's Sweater",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f3c34398-0251-4abe-bc72-9d24d6075b29"),
                            Description = "Elegant blazer for women",
                            Discount = 0.2m,
                            Name = "Women's Blazer",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("813aa7a8-0358-4f98-9964-39e3fda397a8"),
                            Description = "Casual shorts for kids",
                            Discount = 0m,
                            Name = "Kids' Shorts",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("5743d584-be09-44b9-8f6b-2f1779f96b51"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("1675601e-b5aa-46fc-8ca3-889cf4f6e454"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e4c6b252-ddc6-4b17-bc79-01b5869eb959"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3e762d5a-12f6-42be-8677-7167f946b664"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("fd6d35a5-0ee2-4af9-baec-20eb6fbeedea"),
                            Description = "Cozy sweater for women",
                            Discount = 0m,
                            Name = "Women's Sweater",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0f6c9619-ea82-4b9c-af5c-cefbf4dfe328"),
                            Description = "Adorable shirt for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shirt",
                            Price = 17.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("23674f74-e91e-499f-af56-172bdbe4b882"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c0771d74-761a-4982-9b08-727eea37a268"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("db863113-414a-4d37-aaa7-5fe777005d03"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a76ead2b-38bf-446c-9bed-b37a6cb8321f"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6ac2f73a-e3a1-418b-b935-69b946dfd198"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("08a49187-d760-4d0d-b3ed-fa638673b835"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("fb83870a-cfec-48cf-9abe-8e469ec313d7"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3c2d1a0c-02b7-46bd-910c-10dbee46ae25"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("da0234ba-2b85-4c0f-9a02-39b6022945a8"),
                            Description = "Warm sweater for kids",
                            Discount = 0m,
                            Name = "Kids' Sweater",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("45ba7897-ac50-44ba-803e-571af6a167b2"),
                            Description = "Warm sweater for kids",
                            Discount = 0m,
                            Name = "Kids' Sweater",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("18ed9b3a-5e75-4c21-8929-c41a2ab2d7fa"),
                            Description = "Sporty sneakers for men",
                            Discount = 0.1m,
                            Name = "Men's Sneakers",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("66bc89a9-4580-44a1-a426-e82be3dfead3"),
                            Description = "Sporty sneakers for men",
                            Discount = 0.1m,
                            Name = "Men's Sneakers",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e699f153-f9f5-4995-af4f-ad3cf32ddbb0"),
                            Description = "Casual t-shirt for women",
                            Discount = 0.2m,
                            Name = "Women's T-Shirt",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6face81c-d2fd-4a06-bbf6-45ec05ed7d6d"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4a8cb3ae-d498-485d-952e-e63dd99ac845"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c6329301-8af3-4079-be6d-4ff339e02e4b"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d9aeb916-4676-4a31-82b0-bc158b493629"),
                            Description = "Comfortable shorts for men",
                            Discount = 0m,
                            Name = "Men's Shorts",
                            Price = 24.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("8f02b315-e3d6-48f1-8eb1-fbb9a4206a88"),
                            Description = "Fashionable sandals for women",
                            Discount = 0.1m,
                            Name = "Women's Sandals",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("732f8e15-8985-430c-a8c4-18ed5b91b59d"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("67caa8ee-38f2-4ac8-a660-51a7be2cf405"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers2",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("cc12ab07-8856-4ccb-a69e-1ed2f440ce73"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers3",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("01e80560-960a-4cf2-ba34-d0d269b4ecb8"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers4",
                            Price = 34.99m,
                            Rate = 0m
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.ProductColorSizeQuantity", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "Color", "Size");

                    b.ToTable("ProductsInfo");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product_IMG", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductID", "ImageURL");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("863328da-d98d-4857-87b0-0c74858eb86f"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("c1272a2d-ac14-4b7c-8232-5238146449cd"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("f7d7e52a-6f5f-460c-9024-791d46950ff9"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("93e71751-609c-4c7f-b639-3e2213df0354"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("4816d57b-b78d-40e8-975a-a142720cb551"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("c556b2be-a561-43d0-8e93-55e93c6774a7"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("8bb04481-ec1a-40b5-ab81-ac8d604be2b2"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("23adfe9e-1f5e-497d-b405-ec407c8f0804"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("406ab02a-29b0-426a-a8da-bc01765cd77f"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("a84f7f68-020a-43ce-b2f7-24b6b6d99f01"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("c30959e9-9e96-4939-9223-c12a99d08158"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.WishList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductWishList", b =>
                {
                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WishListsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductsId", "WishListsId");

                    b.HasIndex("WishListsId");

                    b.ToTable("ProductWishList");
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<decimal?>("CardNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CartID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MidName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NameOnCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WishListID")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CartID")
                        .IsUnique()
                        .HasFilter("[CartID] IS NOT NULL");

                    b.HasIndex("WishListID")
                        .IsUnique()
                        .HasFilter("[WishListID] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Customer");

                    b.HasData(
                        new
                        {
                            Id = "07d96ed8-155d-49c7-a77a-615f109d77c3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b1d4c6e5-6382-48fe-a1c4-9bac4cb1b7e6",
                            Email = "johndoe@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "79826ba3-55d5-4d56-bc5a-8a4b7da2924d",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567890123456m,
                            City = "New York",
                            Country = "Ukraine",
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe",
                            MidName = "E",
                            NameOnCard = " John E Doe",
                            Role = "User",
                            Street = "123 Main St"
                        },
                        new
                        {
                            Id = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "965540c4-f5eb-479f-bf38-9307f5061952",
                            Email = "janesmith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1c1df9e8-3619-42e7-bbc1-f24070815853",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210987654m,
                            City = "Los Angeles",
                            Country = "Turkey",
                            ExpireDate = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Smith",
                            MidName = "A",
                            NameOnCard = " Jane A Smith",
                            Role = "User",
                            Street = "456 Elm St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "731caeb6-a3bc-4ad6-8d2e-a9e21f85f84b",
                            Email = "emilyanderson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adbecedc-ea52-4540-9889-5c88f931d25c",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210123456m,
                            City = "San Francisco",
                            Country = "Australia",
                            ExpireDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            LastName = "Anderson",
                            MidName = "R",
                            NameOnCard = "Emily R Anderson",
                            Role = "User",
                            Street = "789 Elm St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3f6321a6-4613-4dbb-8c94-843a0424869f",
                            Email = "michaelwilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "444-555-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d66ad5b5-672c-494e-bc22-63fdc0cbf0b6",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "London",
                            Country = "Albania",
                            ExpireDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Wilson",
                            MidName = "J",
                            NameOnCard = "Michael J Wilson",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ee911e31-2a95-4c83-a4e1-79fa237f5b32",
                            Email = "sarahthompson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-777-8888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b845e9ee-eb71-48cd-b36b-430cf2243106",
                            TwoFactorEnabled = false,
                            CardNumber = 9876012345678901m,
                            City = "Sydney",
                            Country = "Australia",
                            ExpireDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sarah",
                            LastName = "Thompson",
                            MidName = "L",
                            NameOnCard = "Sarah L Thompson",
                            Role = "User",
                            Street = "789 Pine St"
                        },
                        new
                        {
                            Id = "f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f9655675-0846-4045-a8fb-92042b3df6cf",
                            Email = "davidmiller@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "999-888-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94a63157-db3e-4d86-b4cb-4cae44a27574",
                            TwoFactorEnabled = false,
                            CardNumber = 5432109876543210m,
                            City = "Toronto",
                            Country = "Canada",
                            ExpireDate = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "David",
                            LastName = "Miller",
                            MidName = "M",
                            NameOnCard = "David M Miller",
                            Role = "User",
                            Street = "123 Oak Ave"
                        },
                        new
                        {
                            Id = "22ac8dc9-4385-48ae-90a3-7d8c898c6d5d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "596c5451-e2b1-43c0-a16b-fa5eeb338e9d",
                            Email = "sophialee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "222-333-4444",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7c52ac26-dd3e-4b12-b02c-5db846269a46",
                            TwoFactorEnabled = false,
                            CardNumber = 1234554321098765m,
                            City = "Seoul",
                            Country = "Serbia",
                            ExpireDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            LastName = "Lee",
                            MidName = "K",
                            NameOnCard = "Sophia K Lee",
                            Role = "User",
                            Street = "456 Cedar St"
                        },
                        new
                        {
                            Id = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9858e477-dd14-4aa9-a6a8-0a756a2216fd",
                            Email = "danielmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f1f18f4c-0d51-4d0a-818c-472c906002de",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210012345m,
                            City = "Madrid",
                            Country = "Spain",
                            ExpireDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Daniel",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Daniel T Martinez",
                            Role = "User",
                            Street = "789 Walnut Ave"
                        },
                        new
                        {
                            Id = "0e67a2e5-df53-4a92-9854-8e1ad46a4e61",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0be6a1f6-4d48-4577-bdc5-e9fcb2ef1ac9",
                            Email = "oliviabrown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "888-777-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "563b4064-02fa-4e4d-93f8-4aae8622f154",
                            TwoFactorEnabled = false,
                            CardNumber = 5432101234567890m,
                            City = "Paris",
                            Country = "France",
                            ExpireDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            LastName = "Brown",
                            MidName = "N",
                            NameOnCard = "Olivia N Brown",
                            Role = "User",
                            Street = "123 Cherry St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992b58",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "24a4efe5-cac7-4efb-be39-df4a9e97c064",
                            Email = "alexjohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "32385f58-a249-4dc5-a374-86bca5823dbd",
                            TwoFactorEnabled = false,
                            CardNumber = 5432167890123456m,
                            City = "Chicago",
                            Country = "Zimbabwe",
                            ExpireDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alex",
                            LastName = "Johnson",
                            MidName = "S",
                            NameOnCard = " Alex S Johnson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "724587e6-9314-4fe6-9c3e-6fd612f50234",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f95d6a58-5691-4ccf-acc4-9ecda5852f4a",
                            Email = "williamtaylor@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "48728881-9c20-4bf0-aed2-df95e01283f5",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567812345678m,
                            City = "London",
                            Country = "Andorra",
                            ExpireDate = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "William",
                            LastName = "Taylor",
                            MidName = "G",
                            NameOnCard = "William G Taylor",
                            Role = "User",
                            Street = "123 Elm St"
                        },
                        new
                        {
                            Id = "234cdf89-12a3-45b6-789c-0123456789de",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cea95d1b-7cb0-4744-a1dd-ca69d4dc4bbc",
                            Email = "emmajdavis@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "444-555-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c1bc792e-dc6d-4061-894c-ca2c4b069c93",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543298765432m,
                            City = "New York",
                            Country = "Bangladesh",
                            ExpireDate = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emma",
                            LastName = "Davis",
                            MidName = "J",
                            NameOnCard = "Emma J Davis",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "6789abcd-ef01-2345-6789-abcd01234567",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4863ee3e-0976-4983-aee7-9a422536610d",
                            Email = "liammwilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c9298f45-cd6d-4d8f-ac99-feeb7c31cb85",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "Los Angeles",
                            Country = "Somalia",
                            ExpireDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Liam",
                            LastName = "Wilson",
                            MidName = "M",
                            NameOnCard = "Liam M Wilson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "bcdef012-3456-789a-bcde-f01234567890",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "05b39b20-a1b3-4415-8d05-9857360fab56",
                            Email = "olivialthompson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-777-8888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c70ff172-c484-4856-b4e6-4835b0500bf2",
                            TwoFactorEnabled = false,
                            CardNumber = 9876012345678901m,
                            City = "Sydney",
                            Country = "Australia",
                            ExpireDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            LastName = "Thompson",
                            MidName = "L",
                            NameOnCard = "Olivia L Thompson",
                            Role = "User",
                            Street = "123 Pine St"
                        },
                        new
                        {
                            Id = "2345cdef-0123-4567-89ab-cdef01234567",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e2f81225-7a5f-42e1-adb2-0fb5e93ed72d",
                            Email = "noahajohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "222-333-4444",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ea809800-2d78-4dbf-b053-7d074bf0ccad",
                            TwoFactorEnabled = false,
                            CardNumber = 1234554321098765m,
                            City = "Seattle",
                            Country = "Kiribati",
                            ExpireDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Noah",
                            LastName = "Johnson",
                            MidName = "A",
                            NameOnCard = "Noah A Johnson",
                            Role = "User",
                            Street = "456 Cedar St"
                        },
                        new
                        {
                            Id = "8901def0-1234-5678-9abc-def012345678",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec2670de-f35b-4fa1-adba-1048a385d7bd",
                            Email = "avaklee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a0b40b24-1e50-4f67-8a52-289fe44a56f4",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543298765432m,
                            City = "San Francisco",
                            Country = "Uruguay",
                            ExpireDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ava",
                            LastName = "Lee",
                            MidName = "K",
                            NameOnCard = "Ava K Lee",
                            Role = "User",
                            Street = "789 Walnut Ave"
                        },
                        new
                        {
                            Id = "23456789-01ab-cdef-0123-456789abcdef",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "305bab52-9a22-4ee0-8911-69ace2fd8997",
                            Email = "isabellatmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "888-777-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "60a3160f-6ac7-4d84-8965-d059dcc06dbd",
                            TwoFactorEnabled = false,
                            CardNumber = 5432109876543210m,
                            City = "Madrid",
                            Country = "Spain",
                            ExpireDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isabella",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Isabella T Martinez",
                            Role = "User",
                            Street = "123 Cherry St"
                        },
                        new
                        {
                            Id = "def01234-5678-9abc-def0-123456789abc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "daea8d8e-5cea-4128-80f9-be605457361c",
                            Email = "sophianbrown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "999-888-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e8b8c727-dbdb-42a0-9550-c67afe10d8ce",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567812345678m,
                            City = "Paris",
                            Country = "France",
                            ExpireDate = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            LastName = "Brown",
                            MidName = "N",
                            NameOnCard = "Sophia N Brown",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "456789ab-cdef-0123-4567-89abcdef0123",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "66e38123-92c4-4b30-9a08-c09fae794e4c",
                            Email = "miasjohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bf6b247e-bb92-460d-af94-017cac991d04",
                            TwoFactorEnabled = false,
                            CardNumber = 5432167890123456m,
                            City = "Rome",
                            Country = "Italy",
                            ExpireDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mia",
                            LastName = "Johnson",
                            MidName = "S",
                            NameOnCard = "Mia S Johnson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "56789abc-def0-1234-5678-9abcdef01234",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3c2e562d-9087-4927-bfdc-761249d585aa",
                            Email = "logantmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a0c4b748-532d-4a6f-9707-858b61287cd1",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "Tokyo",
                            Country = "Japan",
                            ExpireDate = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Logan",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Logan T Martinez",
                            Role = "User",
                            Street = "123 Walnut Ave"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.CartProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Cart", "Cart")
                        .WithMany("Products")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.HasOne("E_Commerce.DAL.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("E_Commerce.DAL.CustomerReview", b =>
                {
                    b.HasOne("E_Commerce.DAL.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.HasOne("E_Commerce.DAL.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Commerce.DAL.OrderProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.ProductColorSizeQuantity", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Product_Color_Size_Quantity")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product_IMG", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductWishList", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.WishList", null)
                        .WithMany()
                        .HasForeignKey("WishListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.HasOne("E_Commerce.DAL.Cart", "Cart")
                        .WithOne("Customer")
                        .HasForeignKey("E_Commerce.DAL.Customer", "CartID");

                    b.HasOne("E_Commerce.DAL.WishList", "WishList")
                        .WithOne("Customer")
                        .HasForeignKey("E_Commerce.DAL.Customer", "WishListID");

                    b.Navigation("Cart");

                    b.Navigation("WishList");
                });

            modelBuilder.Entity("E_Commerce.DAL.Cart", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductOrders");

                    b.Navigation("Product_Color_Size_Quantity");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("E_Commerce.DAL.WishList", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
